/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SpineJ;


import javax.swing.UIManager;


/**
 *
 * @author phm
 */
public class SegmentationJDialog extends javax.swing.JDialog {

    DendriteViewer3D_ dendrite = null;

    /**
     * Creates new form SegmentationJDialog
     */
    public SegmentationJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        try {
            UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
                     
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(distanceJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(distanceJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(distanceJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(distanceJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        
        initComponents();
        dendrite = DendriteViewer3D_.instance;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jCheckBoxAuto = new javax.swing.JCheckBox();
        jButtonOk = new javax.swing.JButton();
        jButtonCancel1 = new javax.swing.JButton();
        jCheckBoxGlobalBack = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLabelMaxRadius = new javax.swing.JLabel();
        jLabelSDValue = new javax.swing.JLabel();
        jCheckBoxWatershed = new javax.swing.JCheckBox();
        jFormattedTextFieldMaxRadius = new javax.swing.JFormattedTextField();
        jFormattedTextFieldSDValue = new javax.swing.JFormattedTextField();
        jLabelSegMethod = new javax.swing.JLabel();
        jComboBoxSegMethod = new javax.swing.JComboBox();
        jComboBoxLocalMethod = new javax.swing.JComboBox();
        jLabelLocalMethod = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Spine segmentation");
        setModal(true);

        jCheckBoxAuto.setSelected(true);
        jCheckBoxAuto.setText("Automatic");
        jCheckBoxAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAutoActionPerformed(evt);
            }
        });

        jButtonOk.setText("Ok");
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });

        jButtonCancel1.setText("Cancel");
        jButtonCancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancel1ActionPerformed(evt);
            }
        });

        jCheckBoxGlobalBack.setText("Global background");
        jCheckBoxGlobalBack.setEnabled(false);
        jCheckBoxGlobalBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxGlobalBackActionPerformed(evt);
            }
        });

        jLabelMaxRadius.setText("Max radius :");
        jLabelMaxRadius.setEnabled(false);

        jLabelSDValue.setText("SD value :");
        jLabelSDValue.setEnabled(false);

        jCheckBoxWatershed.setText("Watershed");
        jCheckBoxWatershed.setEnabled(false);
        jCheckBoxWatershed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxWatershedActionPerformed(evt);
            }
        });

        jFormattedTextFieldMaxRadius.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jFormattedTextFieldMaxRadius.setText("0");
        jFormattedTextFieldMaxRadius.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldMaxRadiusActionPerformed(evt);
            }
        });

        jFormattedTextFieldSDValue.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jFormattedTextFieldSDValue.setText("0");
        jFormattedTextFieldSDValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldSDValueActionPerformed(evt);
            }
        });

        jLabelSegMethod.setText("Segmentation method :");
        jLabelSegMethod.setEnabled(false);

        jComboBoxSegMethod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Classical", "Max", "Block" }));
        jComboBoxSegMethod.setEnabled(false);
        jComboBoxSegMethod.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxSegMethodItemStateChanged(evt);
            }
        });

        jComboBoxLocalMethod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Constant", "Gauss", "Mean" }));
        jComboBoxLocalMethod.setEnabled(false);
        jComboBoxLocalMethod.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxLocalMethodItemStateChanged(evt);
            }
        });

        jLabelLocalMethod.setText("Local method :");
        jLabelLocalMethod.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckBoxGlobalBack)
                                .addGap(49, 49, 49)
                                .addComponent(jCheckBoxWatershed))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jButtonOk, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonCancel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabelSDValue)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jFormattedTextFieldSDValue, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabelMaxRadius)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jFormattedTextFieldMaxRadius, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(85, 85, 85)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabelSegMethod)
                                        .addComponent(jLabelLocalMethod))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jComboBoxLocalMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jComboBoxSegMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCheckBoxAuto)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBoxAuto)
                .addGap(7, 7, 7)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxGlobalBack)
                    .addComponent(jCheckBoxWatershed))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelMaxRadius)
                            .addComponent(jFormattedTextFieldMaxRadius, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelSDValue)
                            .addComponent(jFormattedTextFieldSDValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelSegMethod)
                            .addComponent(jComboBoxSegMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelLocalMethod)
                            .addComponent(jComboBoxLocalMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOk)
                    .addComponent(jButtonCancel1))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAutoActionPerformed
        if (jCheckBoxAuto.isSelected()) {
            jCheckBoxGlobalBack.setEnabled(false);
            jCheckBoxWatershed.setEnabled(false);
            jLabelMaxRadius.setEnabled(false);
            jFormattedTextFieldMaxRadius.setEnabled(false);
            jLabelSDValue.setEnabled(false);
            jFormattedTextFieldSDValue.setEnabled(false);
            jComboBoxSegMethod.setEnabled(false);
            jLabelSegMethod.setEnabled(false);
            jComboBoxLocalMethod.setEnabled(false);
            jLabelLocalMethod.setEnabled(false);
            dendrite.globalBack = 1;
            dendrite.maxRadius = 10;
            dendrite.sdValue = 2;
            dendrite.watershed = true;
        } else {
            jCheckBoxGlobalBack.setEnabled(true);
            jCheckBoxWatershed.setEnabled(true);
            jLabelMaxRadius.setEnabled(true);
            jFormattedTextFieldMaxRadius.setEnabled(true);
            jLabelSDValue.setEnabled(true);
            jFormattedTextFieldSDValue.setEnabled(true);
            jLabelSegMethod.setEnabled(true);
            jComboBoxSegMethod.setEnabled(true);
            jComboBoxLocalMethod.setEnabled(true);
            jLabelLocalMethod.setEnabled(true);
        }
    }//GEN-LAST:event_jCheckBoxAutoActionPerformed

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
        this.dispose();
        dendrite = DendriteViewer3D_.instance;
        dendrite.spineSegmentation(dendrite.imageOrg);
    }//GEN-LAST:event_jButtonOkActionPerformed

    private void jButtonCancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancel1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonCancel1ActionPerformed

    private void jCheckBoxGlobalBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxGlobalBackActionPerformed
        dendrite.globalBack = 1;
    }//GEN-LAST:event_jCheckBoxGlobalBackActionPerformed

    private void jCheckBoxWatershedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxWatershedActionPerformed
        dendrite.watershed = jCheckBoxWatershed.isEnabled();
    }//GEN-LAST:event_jCheckBoxWatershedActionPerformed

    private void jFormattedTextFieldMaxRadiusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldMaxRadiusActionPerformed
        dendrite.maxRadius = Integer.parseInt(jFormattedTextFieldMaxRadius.getText());
    }//GEN-LAST:event_jFormattedTextFieldMaxRadiusActionPerformed

    private void jFormattedTextFieldSDValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldSDValueActionPerformed
        dendrite.sdValue = Integer.parseInt(jFormattedTextFieldSDValue.getText());
    }//GEN-LAST:event_jFormattedTextFieldSDValueActionPerformed

    private void jComboBoxSegMethodItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxSegMethodItemStateChanged
        dendrite.SegMethod = jComboBoxSegMethod.getSelectedIndex();
    }//GEN-LAST:event_jComboBoxSegMethodItemStateChanged

    private void jComboBoxLocalMethodItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxLocalMethodItemStateChanged
        dendrite.LocalMethod = jComboBoxLocalMethod.getSelectedIndex();
    }//GEN-LAST:event_jComboBoxLocalMethodItemStateChanged

    /**
     * @param args the command line arguments
     */
//    public void main() {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(SegmentationJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(SegmentationJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(SegmentationJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(SegmentationJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                SegmentationJDialog dialog = new SegmentationJDialog(new javax.swing.JFrame(), true);
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButtonCancel1;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JCheckBox jCheckBoxAuto;
    private javax.swing.JCheckBox jCheckBoxGlobalBack;
    private javax.swing.JCheckBox jCheckBoxWatershed;
    private javax.swing.JComboBox jComboBoxLocalMethod;
    private javax.swing.JComboBox jComboBoxSegMethod;
    private javax.swing.JFormattedTextField jFormattedTextFieldMaxRadius;
    private javax.swing.JFormattedTextField jFormattedTextFieldSDValue;
    private javax.swing.JLabel jLabelLocalMethod;
    private javax.swing.JLabel jLabelMaxRadius;
    private javax.swing.JLabel jLabelSDValue;
    private javax.swing.JLabel jLabelSegMethod;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
