/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SpineJ;

import ij.IJ;
import java.util.ArrayList;
import org.scijava.vecmath.Color3f;
import mcib3d.geom.Object3D;
import mcib3d.geom.Object3DVoxels;
import mcib3d.geom.Voxel3D;

/**
 *
 * @author phm
 */
public class Edit3dSpineFrame extends javax.swing.JFrame {
    DendriteViewer3D_ dendrite = null;
    /**
     * Creates new form Edit3dSpineFrame
     */
    public Edit3dSpineFrame() {
        initComponents();
    }

    public void setDendrite(DendriteViewer3D_ dendrite) {
        this.dendrite = dendrite;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AddButton = new javax.swing.JToggleButton();
        DelButton = new javax.swing.JToggleButton();
        MergeButton = new javax.swing.JToggleButton();
        CloseButton = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Add, Delete, Merge spines");
        setResizable(false);

        AddButton.setText("Add");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        DelButton.setText("Delete");
        DelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelButtonActionPerformed(evt);
            }
        });

        MergeButton.setText("Merge");
        MergeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MergeButtonActionPerformed(evt);
            }
        });

        CloseButton.setText("Close");
        CloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("CTRL + Left click to select");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(DelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(AddButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(MergeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 14, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(CloseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(AddButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DelButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MergeButton)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CloseButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelButtonActionPerformed
        
        for (int i = 0; i < dendrite.spine3D.getNbObjects(); i++) {
            Object3D obj = dendrite.spine3D.getObject(i);
            if (obj.getComment() != null)
                dendrite.deleteSpine(obj.getName());
        }
    }//GEN-LAST:event_DelButtonActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddButtonActionPerformed

    private void MergeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MergeButtonActionPerformed
        if (dendrite.spineSelected < 2) {
            IJ.showMessage("Needs at least 2 selected spines");
        } 
        else {
            int[] indexes = new int[dendrite.spineSelected];
            int pos = 0;
            for (int i = 0; i < dendrite.spine3D.getNbObjects(); i++) {
                if (dendrite.spine3D.getObject(i).getComment() != null) {
                    indexes[pos] = i;
                    pos++;
                }
            }
            // set name and color of first selected object in Obj0
            Object3DVoxels obj0 = (Object3DVoxels) dendrite.spine3D.getObject(indexes[0]);
            obj0.setName(dendrite.spine3D.getObject(indexes[0]).getName());
            // get color
            Color3f col = dendrite.universe.getContent(obj0.getName()).getColor();
            Object3DVoxels obj;
            String name;
            for (int i = 1; i < indexes.length; i++) {
                name = dendrite.spine3D.getObject(indexes[i]).getName();
                System.out.println("Merging " + obj0.getName() + " with "+ name);
                obj = (Object3DVoxels) dendrite.spine3D.getObject(indexes[i]);
                obj0.addVoxels(obj.getVoxels());
                // Remove object
                dendrite.deleteSpine(name);
            }
            // Remove first selected object
            dendrite.deleteSpine(obj0.getName());

            System.out.println("new object name = " + obj0.getName());
            // Add merged Object in spine3D Pop
            dendrite.spine3D.addObject(obj0);
            // Add merged obj in 3D Viewer
            dendrite.add3DViewer(obj0, col, false, false);
            // Select merged obj in 3D Viewer
            dendrite.add3DViewer(obj0, col, true, true);
            dendrite.spineSelected++;
            // Add new spine in imgSeg
            // fill voxel with color object for object in 3D segmentation image
            ArrayList<Voxel3D> voxelObj = obj0.getVoxels();
            dendrite.imgSeg.setC(1);
            int currentZ = dendrite.imgSeg.getZ();
            for (int i = 0; i < voxelObj.size(); i++) {
                dendrite.imgSeg.setZ((int)voxelObj.get(i).z + 1);
                dendrite.imgSeg.getProcessor().putPixel((int)voxelObj.get(i).x, (int)voxelObj.get(i).y, (int)voxelObj.get(i).getValue());
                dendrite.imgSeg.updateAndDraw();
            }       
            dendrite.imgSeg.setZ(currentZ);
            // Draw ROI in segmented spines image
            dendrite.drawRois(obj0.getName(), true);
            // Remove max Local in merge and proj image ???
        }
    }//GEN-LAST:event_MergeButtonActionPerformed

    private void CloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_CloseButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Edit3dSpineFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Edit3dSpineFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Edit3dSpineFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Edit3dSpineFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Edit3dSpineFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton AddButton;
    private javax.swing.JToggleButton CloseButton;
    private javax.swing.JToggleButton DelButton;
    private javax.swing.JToggleButton MergeButton;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
